Index: Config/NewModule/DB/Makefile
===================================================================
--- Config/NewModule/DB/Makefile	(revision 866)
+++ Config/NewModule/DB/Makefile	(working copy)
@@ -92,17 +92,17 @@
 # target: show-oms-version
 # Показывает версию OMS-файлов, входящих в состав модуля.
 #
-# Если же нужно проверить актуальность установленной версии 
+# Если же нужно проверить актуальность установленной версии
 # системы OMS модулю, что чаще необходимо перед установкой модуля,
 # можно выполнить команду:
 # (code)
 #    oms-load --version
 # (end code)
-# 
-# В случае, если версия ( правка, т.е. ревизия) OMS младше, 
+#
+# В случае, если версия ( правка, т.е. ревизия) OMS младше,
 # чем версия OMS-файлов модуля, для работы с модулем
 # рекомендуется обновить ( установить) OMS.
-# 
+#
 # Если версия ( правка) OMS старше, для разработки
 # рекомендуется обновить версию OMS-файлов, входящих в состав
 # модуля с помощью <oms-update-module>.
@@ -124,9 +124,9 @@
 #  File revision   : 648
 #  File change date: 2010-08-13 15:32:51 +0400
 # (end code)
-# 
-# Версия OMS старше, чем версия файлов модуля CredilogicMView. 
-# Модуль можно устанавливать. Но для разработки 
+#
+# Версия OMS старше, чем версия файлов модуля CredilogicMView.
+# Модуль можно устанавливать. Но для разработки
 # рекомендуется обновить версию OMS-файлов модуля.
 
 show-oms-version: show-oms-version.oms
@@ -331,6 +331,16 @@
 # Файлы, соответствующие маске, не выполняются ( не загружаются) в БД.
 SKIP_FILE_MASK :=
 
+# build var: FILE_MASK
+# Маски для выполнения ( загрузки) файлов в БД.
+#
+# Представляет собой список ( через запятую) масок на путь к файлам
+# относительно каталога DB ( можно использовать спецсимволы "*" и "?").
+# В случае задания файлы, не соответствующие маске, не выполняются ( не
+# загружаются) в БД.
+FILE_MASK :=
+
+
 # build var: LOAD_FILE_MASK
 # Маски для ограничения загружаемых по цели load файлов.
 #
@@ -403,7 +413,7 @@
 
 # Список объектов для проверки отсутствия блокировок перед установкой.
 # Из списка автоматически исключаются файлы, не загружаемые из-за значений
-# параметров LOAD_FILE_MASK и SKIP_FILE_MASK.
+# параметров FILE_MASK, LOAD_FILE_MASK и SKIP_FILE_MASK.
 # Формат списка такой же, как у loadTarget.
 installCheckLockTarget =                      \
   $(loadTarget)                               \
@@ -487,7 +497,7 @@
       $(wildcard Install/Data/$(INSTALL_VERSION)) \
       , $(call getVersionDir,Install/Data) \
     ) \
-  ) 
+  )
 
 
 
@@ -502,7 +512,7 @@
 # - в случае отсутствия в каталоге скриптов run.sql и run-after.sql для
 #   загрузки выбираются скрипты *.sql ( за исключением revert.sql) и *.dat,
 #   в противном случае берутся скрипты run.sql, *.dat, run-after.sql;
-#  
+#
 # Пример:
 # - для получения скриптов из каталогов Install/Data/*/RFInfoP в соответствии
 #   с номером устанавливаемой версии нужно прописать
@@ -590,7 +600,7 @@
 
 # Список объектов для проверки отсутствия блокировок перед отменой установки.
 # Из списка автоматически исключаются файлы, не загружаемые из-за значения
-# параметра SKIP_FILE_MASK.
+# параметра FILE_MASK, SKIP_FILE_MASK.
 # Формат списка такой же, как у loadTarget.
 uninstallCheckLockTarget = \
   $(uninstallLoadTarget) \
