Title: Установка



group: Требования

- использование последних пропатченных версий клиента Oracle ( поддерживаются
  версии 11.2.0.2 ( рекомендуемая), а также 11.1.0.7 и 9.2.0.8)

  В более ранних версиях встречаются ошибки, позднее устраненные Oracle
  ( например, ошибки при загрузке файлов с помощью SQL*Loader).

  Проверка ( из командной строки)

(code)

$ sqlplus -V

SQL*Plus: Release 11.2.0.2.0 Production

(end)

  Также необходимо проверить наличие и версию утилиты SQL*Loader, которая
  используется для загрузки больших объемов данных из файлов.

(code)

$ sqlldr

SQL*Loader: Release 11.2.0.2.0 - Production on Fri Aug 18 16:08:37 2017

Copyright (c) 1982, 2009, Oracle and/or its affiliates.  All rights reserved.

(end)

- для использования возможностей интеграции с Subversion клиент Subversion
  должен быть установлен и путь его исполняемым файлам ( svn, svnversion)
  добавлен в переменную окружения PATH;

- для работы с сетевыми папками следует воспользоваться обходными решениями
  ( см. <Ошибки::Используемые обходные решения>);



group: Установка для Windows

Порядок установки:

- из командной строки Windows в корневом каталоге модуля выполнить

(code)

> .\make install

(end)

Пример

(code)

> .\make install
installed into: "C:\OraMakeSystem"
( use "make install FORCE=1" to rewrite config files in "C:\OraMakeSystem\usr\local\etc\oms")

(end)

Для установки в каталог, отличный от используемого по умолчанию
"C:\OraMakeSystem", путь к нему нужно указать в параметре WIN_ROOT, при этом в
пути следует используется слэш "/" вместо принятого в Windows обратного слэша
"\", который пришлось бы экранировать:

(code)

> .\make install WIN_ROOT=D:/OraMakeSystem
installed into: "D:\OraMakeSystem"
( use "make install FORCE=1" to rewrite config files in "D:\OraMakeSystem\usr\local\etc\oms")

(end)


- добавить путь к каталогу установки ( указанному в "installed into: ...",
  обычно "C:\OraMakeSystem") в переменную окружения PATH
  ( Компьютер -> Свойства -> Дополнительные параметры системы ->
    Переменные среды)

Проверка корректности установки:

- в новом окне командной строки Windows выполнить ( результат должен быть
  аналогичен указанному, номер версии может быть больше)

(code)

> make --oms-version
make.cmd (OMS) 2.0.0

> oms --version
oms (OMS) 2.0.0
...

(end)

  Если при вызове make возникает ошибка вида

(code)

> make --oms-version
make: unrecognized option `--oms-version'
...

(end)

  то нужно перенести путь к каталогу установки OraMakeSystem в начало
  списка путей переменной окружения PATH ( до пути к каталогу, в котором
  находится утилита make, не относящаяся к OraMakeSystem) либо всегда
  выполнять команду make с указанием полного пути ( "C:\OraMakeSystem\make"
  вместо "make") либо всегда выполнять команду make с указанием расширения
  ( "make.cmd" вместо "make"), что вероятно тоже решит проблему:

(code)

> make.cmd --oms-version
make.cmd (OMS) 2.0.0

(end)

- проверка доступности клиента Subversion ( если нужна интеграция с
  Subversion)

(code)

> oms 0; svn --version
oms: Unknown command: '0'.
svn, version 1.9.4 (r1740329)
   compiled Apr 24 2016, 13:57:54 on x86-microsoft-windows
...

(end)

Замечания:

- при необходимости OraMakeSystem, установленный для Windows, можно
  использовать из Cygwin. Для этого в терминала Cygwin при вызове "make" и "oms"
  нужно всегда указывать полный путь ( например,
  "/cygdrive/c/OraMakeSystem/make.cmd") либо может быть достаточно указывать
  эти команды с расширением ".cmd" ( соответственно "make.cmd" и "oms.cmd"),
  например:

(code)

$ oms.cmd create-module -d C:/tmp/TestModule TestModule
...

(end)

( при указании пути C:/tmp/TestModule используется слэш "/" вместо обратного
слэша "\", который необходимо экранировать; при использовании обратного слэша
путь пришлось бы указать в одинарных кавычках в виде
'C:\\\tmp\\\TestModule')

- если в OraMakeSystem, установленном для Windows, для получения пароля нужно
  использовать скрипт get-password, выполняющийся из Cygwin, то необходимо
  проверить, что путь к каталогу со скриптом есть в переменной окружения
  PATH на уровне Windows, а также что на уровне Windows определена переменная
  окружения HOME и она указывает на домашний каталог пользователя, используемый
  в Cygwin ( если выполнения скрипта зависит от настройки домашнего каталога);



group: Установка для Cygwin

В Cygwin должны быть установлены пакеты:
- bash
- make
- coreutils
- findutils
- dos2unix
- gawk
- sed
- grep
- patch
- perl ( для генерации автодокументации, используется в NaturalDocs)

Порядок установки:

- в терминале Cygwin ( Cygwin Terminal) в корневом каталоге модуля выполнить

(code)

$ make install

(end)

Пример

(code)

$ make install
installed with prefix: /usr/local
( use "make install FORCE=1" to rewrite config files in /usr/local/etc/oms)

(end)

- добавить путь к подкаталогу bin префикса установки ( префикс указан в
  "installed with prefix: ...", при установке по умолчанию это
  "/usr/local/bin") в переменную окружения PATH ( если он не был добавлен в нее
  ранее);

Проверка корректности установки:

- в новом окна терминала выполнить ( результат должен быть аналогичен
  указанному, номер версии может быть больше)

(code)

$ make --version
GNU Make 3.81
Copyright (C) 2006  Free Software Foundation, Inc.
...

$ oms --version
oms (OMS) 2.0.0
...

(end)

- проверка доступности клиента Subversion ( если нужна интеграция с
  Subversion)

(code)

$ svn --version
svn, version 1.8.10 (r1615264)
   compiled Aug 29 2014, 15:28:58 on i686-pc-cygwin
...

(end)

Замечания:

- при необходимости скрипт <oms> может быть выполнен из командной строки
Windows ( в примерах ниже предполагается стандартная установка Cygwin в
"C:\cygwin"):

(code)

> set PATH=C:\cygwin\bin;%PATH%

> bash -c 'oms create-module -d "C:\tmp\TestModule" TestModule'

(end)

Вариант запуска с указанием всех путей будет выглядеть так

(code)

> set PATH=C:\cygwin\bin;%PATH%

> C:\cygwin\bin\bash -c '/usr/local/bin/oms create-module -d "C:\tmp\TestModule" TestModule'

(end)

В обоих случаях предварительно выполняется корректировка значения переменной
окружения PATH для исключения использования системной утилиты FIND вместо find
из состава Cygwin ( иначе при выполнении будет возникать ошибка
"FIND: Неправильный формат параметра").



group: Общие замечания по установке

Замечания:

- после установки может потребоваться отредактировать настроечные файлы
  ( database.mk ( <Настройки баз данных>) или <connect.sh>, расположены в
  "C:\OraMakeSystem\usr\local\etc\oms" в случае стандартной установки для
  Windows либо "C:\cygwin\usr\local\etc\oms" при стандартной установке для
  Cygwin). Версии по-умолчанию данных файлов копируются при установке, если они
  не существовали. Настроечные файлы могут быть заменены в случае использования
  флага FORCE=1 при выполнении "make install".



Требования к БД при использовании:
- в БД должен быть установлен модуль ModuleInfo для сохранения информации об
  установке модулей;
- для возможности загрузки батчей в БД нужно установить модуль Scheduler;



group: Тестирование установки

Для тестирования установки в корневом каталоге модуля нужно выполнить
команду:

(code)

make test TEST_USERID=???/???@???

(end)

указав в параметре <TEST_USERID> пользователя БД, который будет использоваться
при тестировании загрузки файлов в БД, в формате "[userName[/password]]@dbName".

Замечания:

- для тестирования установки, выполненной в нестандартный каталог, при
  выполнении "make test" нужно указать те же значения параметров
  <prefix> и <WIN_ROOT>, которые явно указывались при выполнении
  "make install", например тестирование установки для Windows в каталоге
  "D:\OraMakeSystem" можно выполнить командой:

(code)

> make test TEST_USERID=???/???@??? WIN_ROOT=D:/OraMakeSystem

(end)

- при тестировании могут использоваться дополнительные параметры, например
  <TEST_OPERATORID> и <TEST_CASE_NUMBER>;

- если в параметрах <TEST_USERID> или <TEST_OPERATORID> указаны значения без
  пароля, то будет выполнена попытка получения пароля с помощью
  вызова внешней программы ( см. <connect.sh::cspGetUserPassword>,
  <connect.sh::cspGetOperatorPassword>), при этом если в параметре
  <TEST_USERID> указано значение без имени пользователя ( в формате "@dbName"),
  то имя пользователя будет определено с помощью вызова функции
  <connect.sh::cspGetDefaultUserName>;



group: Отмена установки

Для отмены установки с сохранением настроечных файлов в корневом каталоге
модуля нужно выполнить:

(code)

make uninstall

(end)

Для удаления всех установленных файлов, включая настроечные, нужно указать
флаг FORCE=1:

(code)

make uninstall FORCE=1

(end)

Замечания:

- при выполнении команды отмены установки в терминале Cygwin ( Cygwin Terminal)
  производится отмена установки для Cygwin, при выполнении команды отмены
  установки из командной строки Windows производится отмена установки для
  Windows;
