title: Описание

Модуль предназначен для упрощения организации выполнения сравнительно
трудоемких ( с возможным временем выполнения более 5 секунд) заданий с
параметрами, определяемыми пользователями.

Возможности:
- типы заданий с индивидуальными параметрами настройки ( команда для выполнения,
  контроль доступа, время хранения);
- поддержка передачи заданию в качестве параметра файла, загруженного
  пользователем через интерфейс ( см. <pkg_TaskProcessor.createTask( FILE)>);
- поддержка очереди заданий ( параллельное и повторное выполнение, запуск в
  указанное время);
- сохранение результата последнего запуска задания
  ( см. <pkg_TaskProcessorHandler.taskHandler>);
- логирование выполнения заданий
  ( см. <pkg_TaskProcessor::Лог выполнения заданий>)
- автоматическое удаление старых неиспользуемых заданий;



Схема использования в прикладном модуле ( общая):

- создается таблица <prefix>_task, содержащая параметры прикладных заданий;

  Поле task_id, являющееся первичным ключом этой таблицы, представляет собой
  в то же время внешний ключ на таблицу <tp_task>, в которой содержатся поля
  задания, относящиеся к его выполнению. Для поддержки возможности
  автоматического удаления старых заданий, внешний ключ должен быть создан
  с "on delete cascade".

- добавляются интерфейсные функции создания/изменения/удаления заданий,
  которые вызывают соответствующие функции пакета <pkg_TaskProcessor> и вносят
  изменения в таблицу параметров заданий;

- добавляется функция-обработчик, которая будет вызываться из модуля
  TaskProcessor для выполнения задания ( получающая в качестве параметра Id
  задания для определения его параметров, подробнее см.
  <pkg_TaskProcessorHandler::body::taskHandler>);

- с помощью функции <pkg_TaskProcessor.mergeTaskType> создается новый тип
  задания с нужными настройками, в т.ч. с указанием команды для обработки
  задания ( с вызовом функции-обработчика);

Для управления заданиями ( запуск/остановка и т.д.) можно непосредственно
использовать функции пакета <pkg_TaskProcessor>.



В случае, если прикладное, задание выполняет только обработку файла,
передаваемого пользователем через интерфейс ( т.е. других параметров, кроме
имени и данных файла, заданию не требуется), то можно использовать упрощенную
схему ( см. ниже).

Схема использования в прикладном модуле обработки файла:

- добавляется функция-обработчик, получающая в качестве параметров имя файла
  и его данные;

- cоздается новый тип задания с обязательным указанием значения для шаблона
  допустимых имен файлов ( параметр fileNamePattern функции
  <pkg_TaskProcessor.mergeTaskType>)
