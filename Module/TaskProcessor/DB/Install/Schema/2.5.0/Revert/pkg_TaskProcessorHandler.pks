create or replace package pkg_TaskProcessorHandler is
/* package: pkg_TaskProcessorHandler
  Функции обработки модуля TaskProcessor.

  SVN root: Oracle/Module/TaskProcessor
*/



/* group: Функции */

/* pfunc: getExecCommandText
  Функция возвращает PL/SQL код для выполнения

  Параметры:
  execCommand                 - команда выполнения задачи
  isProcessFile               - признак загрузки файла
  isOnlyParse                 - признак проверки корректности кода задания,
                                при этом код не выполняется
                                ( по умолчанию false)

  ( <body::getExecCommandText>)
*/
function getExecCommandText(
  execCommand                 varchar2
, isProcessFile               boolean
, isOnlyParse                 boolean := null
)
return varchar2;

/* pproc: checkExecCommandParsed
  Процедура проверки корректности выполняемого PL/SQL кода

  Параметры:
  execCommand                 - текст выполнения задания
  isProcessFile               - признак загрузки файла

  ( <body::checkExecCommandParsed>)
*/
procedure checkExecCommandParsed(
  execCommand                 varchar2
, isProcessFile               boolean
);

/* pfunc: taskHandler
  Обработчик заданий.
  Выполняет задания, находящиеся в очереди, а также переводит в корректное
  состояние задания, выполнение которых было прервано.

  Задания выполняются с помощью динамического вызова в PL/SQL-блоке команды,
  соответствующей типу задания ( из поля exec_command таблицы <tp_task_type>).

  Переменные, доступные вызываемой команде:
  taskId                      - Id задания
  manageOperatorId            - Id оператора, поставившего задание на выполнение
  nextStartDate               - дата следующего запуска ( модификация, по
                                по умолчанию null)
  startNumber                 - порядковый номер запуска, начиная с 1
                                ( автоматически увеличивается при каждой
                                попытке запуска задания)
  startDate                   - дата запуска
  fileName                    - имя обрабатываемого файла
                                ( только для заданий обработки файла)
  fileData                    - данные обрабатываемого файла ( тип CLOB)
                                ( только для заданий обработки файла)
  resultCode                  - код результата ( модификация, по умолчанию
                                <pkg_TaskProcessorBase.True_ResultCode>)
  execResult                  - результат выполнения ( модификация, по умолчанию
                                null)
  errorCode                   - код ошибки ( модификация, по умолчанию null)
  errorMessage                - текст ошибки ( модификация, по умолчанию null)

  Если задание было выполнено без исключения, то после выполнения задания
  значения переменных, допускающих модификацию, сохраняются в соответствующих
  полях таблицы <tp_task> и выполняется commit.

  В случае, если после выполнения задания переменная nextStartDate имеет не
  null значение, задание снова попадает в очередь на выполнение, в противном
  случае оно переводится в бездействующие.

  В случае, если при выполнении задания возникло исключение, выполняется
  rollback, устанавливается код результата
  <pkg_TaskProcessorBase.Error_ResultCode>, сохраняются код и сообщение об
  ошибке и задание переводится в бездействующие ( в случае исключения из-за
  инвалидации объектов задание ставится на повторное выполнение, см. замечание
  ниже).

  В случае, если обнаружено задание, обработка которого была прервана,
  устанавливается код результата <pkg_TaskProcessorBase.Abort_ResultCode> и
  задание переводится в бездействующие.

  Параметры:
  isFinishAfterProcess        - флаг завершения обработки после выполнения
                                ( с любым результатом) одного задания либо
                                нескольких идущих подряд заданий одного типа
                                ( 1 завершить, 0 не завершать ( по умолчанию))
  forceTaskTypeIdList         - список идентификаторов типов заданий
                                на выполнение через ";"
                                ( по умолчанию нет ограничений)
  ignoreTaskTypeIdList        - список идентификаторов типов заданий,
                                которые не будут выполняться, через ";"
                                ( по умолчанию нет ограничений)

  Возврат:
  - число обработанных заданий

  Замечания:
  - параметр isFinishAfterProcess предназначен для решения проблемы с
    сохранением фиктивных блокировок прикладных объектов в сессии
    обработчика ( см. <Ошибки>);
  - в случае, если при выполнении задания возникает исключение из-за
    инвалидации объектов, например
    "ORA-04061: existing state of package <packageName>  has been invalidated",
    то задание ставится на повторное выполнение, а функция обработки заданий
    завершается с исключением, т.к. повторное выполнение задания в новой
    сессии может завершиться успешно;
  - предполагается заполнение одного из параметров forceTaskTypeIdList
    или ignoreTaskTypeIdList

  ( <body::taskHandler>)
*/
function taskHandler(
  isFinishAfterProcess integer := null
, forceTaskTypeIdList varchar2 := null
, ignoreTaskTypeIdList varchar2 := null
)
return integer;

end pkg_TaskProcessorHandler;
/
