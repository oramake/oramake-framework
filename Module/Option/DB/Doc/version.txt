title: Версии



group: 3.3.0 ( 2016-08-15)

[*] Прекращена поддержка устаревшего интерфейса работы с параметрами,
    при этом удалены:
    - таблицы doc_mask, doc_storage_rule, opt_option, opt_option_value;
    - представление v_opt_option;
    - в пакете pkg_Option функции
      addOption<Date|Number|String>,
      getMask, getStorageRule,
      getOption<Date|Integer|Number|String>,
      set<Date|DateTime|Integer|Number|String>,
      устаревшие варианты createOption, updateOption, findOption;
    - в пакете pkg_Option константы Role_Global_Option_Admin,
      StorageRule<Date|Integer|String>, Test_Option_Postfix;
    - в объектном типе opt_option_list_t функции
      addOption<Date|Number|String>,
      getOption<Date|Number|String>,
      устаревший параметр moduleOptionName функций set<Date|Number|String>;

    После удаления устаревших объектов таблица opt_option_new и представление
    v_opt_option_new переименованы соответственно в opt_option и v_opt_option.

[*] Разрешено создание в рамках модуля одноименных параметров, относящися к
    одноименным объектам разного типа.

[*] Разрешено изменение краткого наименования параметра ( option_short_name),
    в связи с чем в функцию <opt_option_list_t.updateOption> добавлен параметр
    newOptionShortName.

[*] Разрешено изменение модуля, краткого наименования и типа объекта, к
    которому относится настроечный параметр, в связи с чем добавлены функции
    <opt_option_list_t.moveOption> и <opt_option_list_t.moveAll>.



group: 3.1.0.1 ( 2016-04-21)
(<Установка::3.1.0.1>)

[*] Использование представления <v_op_role> вместо таблицы op_role модуля
    AccessOperator.



group: 3.1.0 ( 2014-03-31)

[+] Добавлена возможность выдачи прав на все параметры в определенной БД
    ( см. <pkg_OptionMain.LocalRoleSuffix_OptionSName>). Также добавлена
    роль OptShowAllOption для просмотра параметров во всех БД ( при этом
    ранее созданная роль OptShowOption дает доступ к форме "Параметр" в
    интерфейсе, но не дает доступа к данным параметров в БД).

[+] Добавлена возможность задания значений параметров, используемых только
    для указанного оператора ( см. параметр usedOperatorId в конструкторе
    <opt_option_list_t.opt_option_list_t>).

[+] Добавлена функция <opt_option_list_t.getOptionValue> для получения в
    SQL настроечных параметров с текущими используемыми значениями, которые
    относятся к данному набору параметров, а тажке функция
    <opt_option_list_t.getValue> для получения заданных значений параметра.

[+] Добавлена процедура <opt_option_list_t.deleteAll> для удаления всех
    настроечных параметров, относящихся к набору параметров.

[+] В процедуры для добавления параметров ( например
    <opt_option_list_t.addString>) добавлен флаг changeValueFlag для
    возможности установки значения параметра, если он был создан ранее.

[+] Добавлена процедура <opt_option_list_t.createOption> для создания параметра
    без задания значений.

[+] В функцию изменения параметра <opt_option_list_t.updateOption> добавлен
    флаг skipIfNoChangeFlag для исключения обновления параметра при отсутствии
    фактического изменения данных по нему.

[+] Добавлена функция <opt_option_list_t.setValue> ( и аналогичная процедура)
    для установки значения параметра любого типа.

[+] Добавлена статическая процедура <opt_option_list_t.deleteValue( VALUE_ID)>
    для удаления значения параметра по Id.

[+] Добавлена функция <opt_option_list_t.existsOption> для проверки наличия
    настроечного параметра.

[+] Для функций getValueCount типа <opt_option_list_t> добавлен параметр
    raiseNotFoundFlag ( выбрасывать ли исключение в случае отсутствия
    параметра).

[*] При создании параметров пакетных заданий с помощью API-функций поле
    option_short_name устаревшей таблицы opt_option стало заполняться так же,
    как и для других параметров
    ( "<moduleName>[.<objectShortName>].<optionShortName>"), что обеспечивает
    возможность переноса параметров при изменении модуля, к которому относится
    пакетное задание.

[*] В случае наличия указанного параметра и отсутствии значения
    функций типа <opt_option_list_t> ( getValueId, getValueListSeparator,
    get<Date|Number|String>, getValueList) стали возвращать null вместо
    генерации исключения. Также уточнена семантика аргумента raiseNotFoundFlag
    этих функций, который стал давать возможность успешного выполнения функции
    в случае отсутствия параметра ( а не значения), при этом исправлена ошибка
    в использовании raiseNotFoundFlag ( возникало исключение при отсутствии
    заданного параметра не смотря на указание raiseNotFoundFlag равным 0).

[*] При создании параметра с хранением значений в зашифрованном виде
    с помощью функций addString и addStringList типа <opt_option_list_t> для
    него по умолчанию используется уровень доступа только к изменению значения,
    чтобы исключить возможность просмотра незашифрованного значения через
    интерфейс. Также уточнено используемое по умолчанию значение для параметра
    accessLevelCode функции <opt_option_list_t.updateOption>. При установке
    обновления для всех существующих параметов с шифрованием значений (
    encryption_flag = 1) уровень доступа ( access_level_code) изменяется с
    полного ( "FULL") на доступ к изменению значения ( "VALUE").

[*] Уточнена сортировка в интерфейсных функциях <pkg_Option.getObjectType>
    и <pkg_Option.getValueType>.

[*] Для сохранения ранее выданных прав при пересоздании типов
    <opt_option_list_t> и <opt_plsql_object_option_t> в Oracle 11.2 и выше
    стала использоваться опция "force" в "create or replace type" ( в более
    ранних версиях используется "drop type force").

[!] Исключено возникновение ошибки при одновременном изменении флага шифрования
    значений параметра ( encryption_flag) и наименования параметра
    ( option_short_name).



group: 3.0.0 ( 2013-02-04)

[*] Стало обязательным указание модуля, к которому относится настроечный
    параметр.

[+] Добавлена возможность задания настроечных параметров для объектов в рамках
    модуля ( см. параметры конструктора <opt_option_list_t.opt_option_list_t> и
    функции getObjectTypeId, mergeObjectType, deleteObjectType типа
    <opt_option_list_t>).

[+] Добавлен тип <opt_plsql_object_option_t> для упрощенного создания набора
    параметров PL/SQL объекта ( обертка над <opt_option_list_t>).

[+] Добавлена возможность задания значений настроечных параметров в виде списка
    значений ( см. функции getValueCount, getValueListSeparator,
    add<Date|Number|String>List, getValueList, setValueList, а также параметр
    valueIndex функций get<Date|Number|String> и set<Date|Number|String> в типе
    <opt_option_list_t>).

[+] Добавлена возможность хранения строковых значений настроечных параметров
    в зашифрованном виде.

[+] Добавлена возможность задания значений настроечных параметров, действующих
    только в указанной БД ( см. параметр instanceName функций в типе
    <opt_option_list_t>).

[+] Добавлена возможность одновременного указания промышленного и тестового
    значения в функциях добавления настроечного параметра и изменения его
    значения ( см. варианты функций "TEST_PROD" в типе <opt_option_list_t>).

[+] В тип <opt_option_list_t> добавлены статические процедуры для изменения
    значения параметра по Id значения ( см. процедуры
    update<Data|Number|String>Value).

[*] Обновлены функции пакета <pkg_Option>, предназначенные для использования
    из web-интерейса ( устаревшие функции временно сохранены для совместимости,
    при этом для добавления параметра нужно указывать option_short_name (
    поле "Код" в интерефейсе) вида "<moduleName>.<moduleOptionShortName>"
    чтобы обеспечить привязку параметра к модулю).

[*] Реализовано хранение полной истории изменений настроечных параметров
    ( ранее хранилась только история изменения значений параметров).

[*] Удалена возможность задания локальных ( действующих только для текущего
    оператора) значений параметров.

[*] Для хранения данных по параметрам и их значениям стали использоваться новые
    таблицы <opt_option_new> и <opt_value> ( устаревшие таблицы opt_option
    и opt_option_value, а также doc_storage_rule, doc_mask и представление
    v_opt_option, временно сохранены для обеспечения совместимости).

    Не поддерживаются следующие операции над устаревшими
    таблицами:
    - выполнение SQL-команды "merge" над таблицей opt_option или
      opt_option_value;
    - выполнение "update" над opt_option_value;
    - изменение значений любых полей кроме название параметра ( поле
      option_name) при выполнении "update" над opt_option;



group: 2.4.3 ( 2013-01-09)

[*] В скрипт выдачи прав на использование модуля добавлена выдача прав на
    использование объектного типа <opt_option_list_t>;



group: 2.4.2 ( 2012-10-22)

[+] Добавлен скрипт
    <Install/Grant/Last/reference.sql> выдачи прав на
    использование ссылок на таблицы модуля;



group: 2.4.1 ( 2012-08-30)

[*] Добавлен интерфейсный объектный тип <opt_option_list_t>;



group: 2.4.0 ( 2012-08-22)

[+] Добавлен скрипт <Install/Grant/Last/run.sql> для выдачи прав на
    использование модуля.

[+] Добавлены функции установки, создания и получения значений опций,
    принимающие параметры moduleName, moduleOptionName.



group: 2.3.0 ( 2012-07-10)

[*] Использован модуль DynamicSql вместо функции addSqlCondition;

[+] Добавлены функции  <pkg_Option.getOptionDate>,
    <pkg_Option.getOptionNumber>, <pkg_Option.getOptionString>,
    принимающие параметр короткого наименования опции ( optionShortName);

[+] Добавлены процедуры <pkg_Option.addOptionDate>,
    <pkg_Option.addOptionNumber>, <pkg_Option.addOptionString>;



group: 2.2.0 ( 2012-04-16)

[+] В интерфейсную функцию <pkg_Option.findOption> добавлен параметр
    batchShortName для поиска параметров указанного пакетного задания модуля
    Scheduler.
