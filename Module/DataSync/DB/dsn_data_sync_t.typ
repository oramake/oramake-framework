create or replace type dsn_data_sync_t force
authid current_user
as object
(
/* db object type: dsn_data_sync_t
  Функции для работы с интерфейсными таблицами ( абстрактный базовый класс).

  Объект работает с правами вызывающего ( authid current_user).

  SVN root: Oracle/Module/DataSync
*/



/* group: Закрытые объявления */



/* group: Переменные */

/* var: tableList
  Список интерфейсных таблиц для обновления.

  Элементы списка указываются
  в формате:

  <tableName>[:[<refreshMethod>][:[<sourceView>][:[<tempTableName>]]]][:[<optionList>]]

  tableName             - имя таблицы для обновления ( без учета регистра)
  refreshMethod         - метод обновления ( "d" сравнением данных ( по
                          умолчанию), "m" с помощью материализованного
                          представления, "t" сравнением с использованием
                          временной таблицы)
  sourceView            - имя исходного представления, возможно с указанием
                          схемы ( по умолчанию строится на основе имени
                          таблицы для обновления добавлением префикса "v_")
  tempTableName         - имя временной таблицы ( без учета регистра),
                          используемой при обновлении методом "t" ( по
                          умолчанию строится на основе имени таблицы для
                          обновления добавлением окончания "_tmp")
  optionList            - список дополнительных опций ( с разделителем пробел)
                          в формате "<optName>=<optValue>", допустимые опции
                          перечислены ниже;

  Возможные дополнительные
  опции ( <optionList>):

  excludeColumnList     - список колонок таблицы, исключаемых из обновления
                          ( с разделителем запятая, без учета регистра,
                           пробельные символы игнорируются) ( по умолчанию
                          в обновлении участвуют все колонки)

  Символы табуляции ( 0x09), возврата каретки ( 0x0D), перевода строки ( 0x0A)
  рассматриваются как пробельные и игнорируются, если они указаны до или после
  элементов списка.
*/
tableList cmn_string_table_t,

/* var: mlogList
  Список логов материализованных представлений интерфейсных таблиц.
  В списке указывается имя базовой таблицы ( без учета регистра), и, если
  нужно, дополнительные опции для создания лога после разделителя двоеточие
  ( пример: "tmp_table:with rowid").
*/
mlogList cmn_string_table_t,

/* var: sourceSchema
  Имя исходной схемы, в которой расположены представления с исходными данными
  ( без учета регистра).
*/
sourceSchema varchar2(30),



/* group: Функции */



/* group: Закрытые объявления */

/* pproc: initialize
  Инициализирует экземпляр объекта.
  Процедура должна в обязательном порядке вызываться при создании экземпляра
  производного класса.

  Параметры:
  tableList                   - список интерфейсных таблиц
                                ( формат см. <tableList>)
  mlogList                    - список логов материализованных представлений
                                интерфейсных таблиц
                                ( формат см. <mlogList>)
                                ( по умолчанию отсутствует)
  sourceSchema                - имя схемы по умолчанию для исходных
                                представлений
                                ( по умолчанию отсутствует)

  ( <body::initialize>)
*/
member procedure initialize(
  tableList cmn_string_table_t
  , mlogList cmn_string_table_t := null
  , sourceSchema varchar2 := null
),



/* group: Открытые объявления */

/* pproc: refresh
  Обновляет данные в интерфейсных таблицах.

  Параметры:
  forTableName                - обновление только указанной таблицы
                                ( имя таблицы без учета регистра)
                                ( по умолчанию без ограничений)
  createMViewFlag             - создавать материализованное представление для
                                обновления таблиц, которые должны обновляться
                                с помощью м-представления , если оно
                                отсутствует либо его невозможно использовать
                                для обновления
                                ( 1 да, 0 нет ( по умолчанию), игнорируется в
                                  в случае указания forceCreateMViewFlag равным
                                  1)
  forceCreateMViewFlag        - безусловно создавать ( пересоздавать)
                                материализованное представление для обновления
                                таблиц, которые должны обновляться
                                с помощью м-представления
                                ( 1 да, 0 нет ( по умолчанию))
  continueAfterErrorFlag      - продолжать обработку остальных таблиц в случае
                                ошибки при обновлении
                                ( 1 да, 0 нет ( по умолчанию))

  ( <body::refresh>)
*/
member procedure refresh(
  self in dsn_data_sync_t
  , forTableName varchar2 := null
  , createMViewFlag integer := null
  , forceCreateMViewFlag integer := null
  , continueAfterErrorFlag integer := null
),

/* pproc: dropRefreshMView
  Удаляет материализованные представления, созданные для обновления
  интерфейсных таблиц (  таблица при удалении м-представления сохраняется).

  Параметры:
  forTableName                - обработка только указанной таблицы
                                ( имя таблицы без учета регистра)
                                ( по умолчанию без ограничений)
  ignoreNotExistsFlag         - игнорировать отсутствие материализованного
                                представления для удаления
                                ( 1 игнорировать, 0 выбрасывать ошибку
                                  ( по умолчанию))
  continueAfterErrorFlag      - продолжать обработку остальных таблиц в случае
                                ошибки при удалении материализованного
                                представления

  ( <body::dropRefreshMView>)
*/
member procedure dropRefreshMView(
  self in dsn_data_sync_t
  , forTableName varchar2 := null
  , ignoreNotExistsFlag integer := null
  , continueAfterErrorFlag integer := null
),

/* pproc: createMLog
  Создает необходимые логи материализованных представлений.

  Параметры:
  forTableName                - создавать лог только для указанной таблицы
                                ( имя таблицы без учета регистра)
                                ( по умолчанию без ограничений)
  recreateFlag                - флаг пересоздания лога, если он существует
                                ( 1 да, 0 нет ( по умолчанию))

  ( <body::createMLog>)
*/
member procedure createMLog(
  self in dsn_data_sync_t
  , forTableName varchar2 := null
  , recreateFlag integer := null
)

)
not final
not instantiable
/
