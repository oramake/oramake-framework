# Алгоритм формирования Java-исходника для пакета на основе исходников классов.
# Для корректной работы должна быть прописана зависимость создаваемого файла
# *.jav от исходных файлов *.java, все исходные классы должны относиться к
# одному пакету ( package).
# Правило относится к исходникам в Java/Lib для исключения его срабатывания
# при безусловной сборке для обычных ( не генерируемых) Java-исходников.
Java/Lib/%.jav:
	@if [[ -z "$(filter %.java,$<)" ]]; then \
		echo "*** No source files *.java for create \"$@\"."; \
		false; \
	fi \
	&& echo "$@: сreate java source..."	\
	&& ( \
		echo -ne "create or replace and compile java source named \"`basename $@ .jav`\" as\r\n//\r\n// DO NOT EDIT: Autogenerated from java class source files.\r\n//\r\n\r\n" \
		&& grep --no-filename --max-count=1 "^package .*;" $< \
		&& echo -ne "\r\n" \
		&& grep --no-filename "^import .*;" $^ | sort --unique \
		&& grep --no-filename -v "^package .*;\|^import .*;" $^ \
		&& echo -ne "/\r\n" \
	) | unix2dos > $@



# Для выполнения файлов *.jar в БД добавляем неявное правило с большим
# приоритетом, чем стандартное правило.
ifneq ($(ru),)

# Отменяем стандартные правила
%.$(ru): %
%.$(lu): %

# Функция загрузки файла .jar в БД.
jarLoadFunction  = \
	{ \
	loadFile="$<"; \
	$(checkFileMaskScript) \
	if (( isNeedProcess )) ; then \
  	Java/load-java-lib.sh $${loadFile} $(call getConnectInfo,$(LOAD_USERID),$(LOAD_DB)); \
  fi; \
  }

# Функция выгрузки файла .jar из БД.
jarUnloadFunction  = \
	{ \
	loadFile="$<"; \
	$(checkFileMaskScript) \
	if (( isNeedProcess )) ; then \
  	Java/drop-java-lib.sh $${loadFile} $(call getConnectInfo,$(LOAD_USERID),$(LOAD_DB)); \
  fi; \
  }

# Правило загрузки Java-библиотеки
%.jar.ignore.$(lu): %.jar
	@$(jarLoadFunction)

# Правило выгрузки Java-библиотеки
%.jar.ignore.revert.$(ru): %.jar
	@$(jarUnloadFunction)

%.jar.revert.$(ru): %.jar
	@$(jarUnloadFunction)

# Восстанавливаем стандартные правила
%.$(ru): %
	@$(runFunction)

%.$(lu): %
	@$(loadFunction)

endif
